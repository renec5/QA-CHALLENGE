{
	"info": {
		"_postman_id": "49851f9e-29cb-40d4-a88a-1dc944ee1222",
		"name": "QA-CHALLENGE",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21144222"
	},
	"item": [
		{
			"name": "Projects",
			"item": [
				{
					"name": "GetAllProjects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Getting Tasks\", ()=>{",
									"    const response = pm.response.json();",
									"    pm.expect(response[0].name).to.equal(\"Inbox\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/projects",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateNewProject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create Project\", ()=>{",
									"    const response = pm.response.json();",
									"    console.log(response);",
									"    pm.expect(response.name).equal(\"QA Challenge Project\")",
									"    pm.environment.set(\"getProjectID\", response.id);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"QA Challenge Project\",\n    \"parent_id\": 1,\n    \"parent Deprecated\": 1,\n    \"color\": 21,\n    \"favorite\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.todoist.com/rest/v1/projects",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAproject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate get project\", ()=>{",
									"    const response = pm.response.json();",
									"    pm.expect(response.id).to.equal(pm.environment.get(\"getProjectID\"));",
									"    pm.response.to.have.header(\"Content-Type\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/projects/{{getProjectID}}",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"projects",
								"{{getProjectID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateProject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Things to buy\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.todoist.com/rest/v1/projects/{{getProjectID}}",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"projects",
								"{{getProjectID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Project",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/projects/{{getProjectID}}",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"projects",
								"{{getProjectID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "NegativeGetAllProjects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate negative GetAllProjects\"), ()=>{",
									"    pm.expect(pm.response.code).to.equal(404)",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/project",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"project"
							]
						}
					},
					"response": []
				},
				{
					"name": "NegativeCreateNewProject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate NegativeCreateNewProject\", ()=>{",
									"    pm.expect(pm.response.code).to.equal(400);",
									"    pm.expect(pm.response.text()).to.equal(\"Name must be provided for the project creation\");",
									"    ",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/projects",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "NegativeGetProject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate NegativeGetProject\", ()=>{",
									"    pm.expect(pm.response.code).to.equal(404);",
									"    pm.expect(pm.response.text()).to.equal(\"Project not found\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/projects/123",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"projects",
								"123"
							]
						}
					},
					"response": []
				},
				{
					"name": "NegativeUpdateProject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate NegativeUpdateProject\", ()=>{",
									"    pm.expect(pm.response.code).to.equal(400);",
									"    pm.expect(pm.response.text()).to.equal(\"At least one of name, color or favorite fields should be set\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/projects/123",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"projects",
								"123"
							]
						}
					},
					"response": []
				},
				{
					"name": "NegativeDeleteProject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate NegativeDeleteProject\", ()=>{",
									"    pm.expect(pm.response.code).to.equal(204);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/projects/123",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"projects",
								"123"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "GET-ACTIVE-TASKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Getting tasks\", ()=>{",
									"  const response = pm.response.json();",
									"  console.log(response);",
									"  pm.expect(response.length).to.gte(5);",
									"  ",
									"  ",
									"})",
									"",
									"pm.test(\"Getting IDs\", ()=>{",
									"  const response = pm.response.json();",
									"  console.log(response);",
									"  for(let i = 0; i < 6; i++){",
									"      pm.expect(response[i].description).to.equal(`This is just a test task called: Test ${i}`)",
									"      pm.expect(response[i].content).to.equal(`Test ${i}`);",
									"  }",
									"  ",
									"})",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE-TASK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate Acitve Task\", ()=>{",
									"    const response = pm.response.json();",
									"    pm.environment.set(\"ProjectID\", response.id);",
									"    pm.expect(response.description).to.equal(\"Task created for QA-Callenge test\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"QA-Challenge\",\n    \"description\": \"Task created for QA-Callenge test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET-ACTIVE-TASK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate Acitve Task\", ()=>{",
									"    const response = pm.response.json();",
									"    pm.expect(response.completed).to.be.false;",
									"    pm.expect(response.id).to.equal(pm.environment.get(\"ProjectID\"));",
									"})",
									"",
									"pm.test(\"Validate Content and Description\", ()=>{",
									"    const response = pm.response.json();",
									"    pm.expect(response.content).to.equal(\"QA-Challenge\");",
									"    pm.expect(response.description).to.equal(\"Task created for QA-Callenge test\");",
									"})",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks/{{ProjectID}}",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks",
								"{{ProjectID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE-TASK",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"Update QA-Challenge\",\n    \"description\": \"Task update for QA-Callenge test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks/{{ProjectID}}",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks",
								"{{ProjectID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CLOSE-TASK",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks/{{ProjectID}}/close",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks",
								"{{ProjectID}}",
								"close"
							]
						}
					},
					"response": []
				},
				{
					"name": "REOPEN-TASK",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks/{{ProjectID}}/reopen",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks",
								"{{ProjectID}}",
								"reopen"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE-TASK",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks/{{ProjectID}}",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks",
								"{{ProjectID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "NegativeGET-ACTIVE-TASKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate NegativeGET-ACTIVE-TASKS\", ()=>{",
									"    pm.expect(pm.response.code).to.equal(404);",
									"    pm.expect(pm.response.text()).includes(\"404 - Sorry, the page you're looking for isn’t here anymore\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/task",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "NegativeCREATE-TASK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate NegativeCREATE-TASK\", ()=>{",
									"    pm.expect(pm.response.code).to.equal(400);",
									"    pm.expect(pm.response.text()).to.equal(\"Required argument is missing\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "NegativeGET-ACTIVE-TASK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate NegativeET-ACTIVE-TASK\", ()=>{",
									"    pm.expect(pm.response.code).to.equal(404);",
									"    pm.expect(pm.response.text()).to.equal(\"Task not found\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks/123",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks",
								"123"
							]
						}
					},
					"response": []
				},
				{
					"name": "NegativeUPDATE-TASK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate NegativeUPDATE-TASK\", ()=>{",
									"    pm.expect(pm.response.code).to.equal(400);",
									"    pm.expect(pm.response.text()).to.equal(\"At least one of supported fields should be set and non-empty\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks/123",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks",
								"123"
							]
						}
					},
					"response": []
				},
				{
					"name": "NegativeCLOSE-TASK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate NegativeCLOSE-TASK\", ()=>{",
									"    pm.expect(pm.response.code).to.equal(404);",
									"    pm.expect(pm.response.text()).to.equal(\"Task not found\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks/123/close",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks",
								"123",
								"close"
							]
						}
					},
					"response": []
				},
				{
					"name": "NegativeREOPEN-TASK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate NegativeREOPEN-TASK\", ()=>{",
									"    pm.expect(pm.response.code).to.equal(404);",
									"    pm.expect(pm.response.text()).to.equal(\"Task not found\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks/123/reopen",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks",
								"123",
								"reopen"
							]
						}
					},
					"response": []
				},
				{
					"name": "NegativeDELETE-TASK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate NegativeDELETE-TASK\", ()=>{",
									"    pm.expect(pm.response.code).to.equal(405);",
									"    pm.expect(pm.response.text()).includes(\"500 - Sorry, something went wrong\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.todoist.com/rest/v1/tasks",
							"protocol": "https",
							"host": [
								"api",
								"todoist",
								"com"
							],
							"path": [
								"rest",
								"v1",
								"tasks"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}